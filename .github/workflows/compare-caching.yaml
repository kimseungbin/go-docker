name: Compare Cache Efficiency
run-name: Compare Cache Efficiency for ${{ github.event.head_commit.message }}
on: push
jobs:
  # Go Mod Cache Jobs
  create-mod-cache:
    name: Create Go Module Cache
    runs-on: ubuntu-latest
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  recreate-mod-cache:
    name: Use Existing Go Module Cache Without Changes
    runs-on: ubuntu-latest
    needs: create-mod-cache
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  partial-cache-go-mod-change:
    name: Use Go Module Cache with Additional Dependencies
    runs-on: ubuntu-latest
    needs: create-mod-cache
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  no-cache-go-mod:
    name: No Cache with Additional Go Module Dependencies
    runs-on: ubuntu-latest
    needs: create-mod-cache
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  # Go Build Cache Jobs
  create-build-cache:
    name: Create Go Build Cache
    runs-on: ubuntu-latest
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  recreate-build-cache:
    name: Use Existing Go Build Cache Without Changes
    runs-on: ubuntu-latest
    needs: create-build-cache
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  partial-cache-go-build-code-change:
    name: Use Go Build Cache with Code Changes
    runs-on: ubuntu-latest
    needs: create-build-cache
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  partial-cache-go-build-mod-change:
    name: Use Go Build Cache with Dependency Changes
    runs-on: ubuntu-latest
    needs: create-build-cache
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  partial-cache-go-build-full-change:
    name: Use Go Build Cache with Code and Dependency Changes
    runs-on: ubuntu-latest
    needs: create-build-cache
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  no-cache-go-build:
    name: No Cache with Code Changes
    runs-on: ubuntu-latest
    needs: create-build-cache
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  # Docker Layer cache Jobs
  create-docker-layer-cache:
    name: Create Docker Layer Cache
    runs-on: ubuntu-latest
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  recreate-docker-layer-cache:
    name: Use Existing Docker Layer Cache Without Changes
    runs-on: ubuntu-latest
    needs: create-docker-layer-cache
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  partial-cache-layer-mod-change:
    name: Use Docker Layer Cache with Dependency Changes
    runs-on: ubuntu-latest
    needs: create-docker-layer-cache
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  partial-cache-layer-code-change:
    name: Use Docker Layer Cache with Code Changes
    runs-on: ubuntu-latest
    needs: create-docker-layer-cache
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  partial-cache-layer-full-change:
    name: Use Docker Layer Cache with Code and Dependency Changes
    runs-on: ubuntu-latest
    needs: create-docker-layer-cache
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  no-cache-layer-full-change:
    name: No Docker Layer Cache with Code and Dependency Changes
    runs-on: ubuntu-latest
    needs: create-docker-layer-cache
    outputs:
      duration: ${{ steps.get-duration.outputs.duration }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Record Start Time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV
      - name: Simulate Task
        run: sleep 5
      - name: Get Duration
        id: get-duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - $start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

  aggregate-results:
    name: Aggregate Results
    runs-on: ubuntu-latest
    needs:
      - create-mod-cache
      - create-build-cache
      - create-docker-layer-cache
      - recreate-mod-cache
      - partial-cache-go-mod-change
      - no-cache-go-mod
      - recreate-build-cache
      - partial-cache-go-build-code-change
      - partial-cache-go-build-mod-change
      - partial-cache-go-build-full-change
      - no-cache-go-build
      - recreate-docker-layer-cache
      - partial-cache-layer-mod-change
      - partial-cache-layer-code-change
      - partial-cache-layer-full-change
      - no-cache-layer-full-change
    steps:
      - name: Generate Summary Table
        run: |
          echo "| Job Name                  | Duration (seconds) |" >> $GITHUB_STEP_SUMMARY
          echo "|---------------------------|--------------------|" >> $GITHUB_STEP_SUMMARY
          echo "| create-mod-cache              | ${{ needs.create-mod-cache.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| create-build-cache            | ${{ needs.create-build-cache.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| create-docker-layer-cache   | ${{ needs.create-docker-layer-cache.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| recreate-mod-cache            | ${{ needs.recreate-mod-cache.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| partial-cache-go-mod-change   | ${{ needs.partial-cache-go-mod-change.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| no-cache-go-mod               | ${{ needs.no-cache-go-mod.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| recreate-build-cache          | ${{ needs.recreate-build-cache.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| partial-cache-go-build-code-change | ${{ needs.partial-cache-go-build-code-change.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| partial-cache-go-build-mod-change | ${{ needs.partial-cache-go-build-mod-change.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| partial-cache-go-build-full-change | ${{ needs.partial-cache-go-build-full-change.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| no-cache-go-build             | ${{ needs.no-cache-go-build.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| recreate-docker-layer-cache | ${{ needs.recreate-docker-layer-cache.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| partial-cache-layer-mod-change | ${{ needs.partial-cache-layer-mod-change.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| partial-cache-layer-code-change | ${{ needs.partial-cache-layer-code-change.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| partial-cache-layer-full-change | ${{ needs.partial-cache-layer-full-change.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY
          echo "| no-cache-layer-full-change    | ${{ needs.no-cache-layer-full-change.outputs.duration }} |" >> $GITHUB_STEP_SUMMARY